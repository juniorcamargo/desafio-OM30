version: "3.7"

services:
    # image project
    app:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - redis
        networks:
            - laravel

    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "8989:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - laravel

    # db postegress
    db:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: example
        ports:
            - 5432:5432
        networks:
            - laravel

    adminer:
        image: adminer
        restart: always
        ports:
            - 8282:8080
        networks:
            - laravel

    # queue
    # queue:
    #     image: especializati/laravel9-app
    #     restart: unless-stopped
    #     command: "php artisan queue:work"
    #     volumes:
    #         - ./:/var/www
    #     depends_on:
    #         - redis
    #         - app
    #     networks:
    #         - laravel

    # rabbitmq
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq_management
        restart: always
        environment:
            RABBITMQ_DEFAULT_USER: admin
            RABBITMQ_DEFAULT_PASS: passw123
        ports:
            - 25672:25672 # (erlang) communication between the nodes and CLI tool
            - 15672:15672 # communication with the web management API
        volumes:
            - /docker_conf/rabbitmq/data/:/var/lib/rabbitmq/
        networks:
            - laravel

    # redis
    redis:
        image: redis:latest
        networks:
            - laravel

networks:
    laravel:
        driver: bridge
